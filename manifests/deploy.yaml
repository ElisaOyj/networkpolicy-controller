apiVersion: v1
kind: ServiceAccount
metadata:
  name: networkpolicy-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: networkpolicy-controller

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: networkpolicy-controller
  labels:
    app.kubernetes.io/name: networkpolicy-controller
rules:
- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups: [""]
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: networkpolicy-controller
  labels:
    app.kubernetes.io/name: networkpolicy-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: networkpolicy-controller
subjects:
- kind: ServiceAccount
  name: networkpolicy-controller
  namespace: kube-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: networkpolicy-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: networkpolicy-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: networkpolicy-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: networkpolicy-controller
    spec:
      serviceAccountName: networkpolicy-controller
      volumes:
      - name: networkpolicy-configuration
        configMap:
          name: networkpolicy-configuration
      containers:
      - name: networkpolicy-controller
        image: elisaoyj/networkpolicy-controller:latest
        volumeMounts:
        - name: networkpolicy-configuration
          mountPath: /code/config
        env:
        - name: CONFIG
          value: /code/config/config.json

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: networkpolicy-configuration
  labels:
    app.kubernetes.io/name: networkpolicy-controller
data:
  config.json: |-
    {
      "ignoreAnnotation": "networkpolicy.elisa.fi",
      "rules": [
        {
          "ignoredNamespaces": [
            "kube-system",
            "ingress-nginx-internal",
            "ingress-nginx-external",
            "monitoring"
          ],
          "spec": {
            "kind": "NetworkPolicy",
            "apiVersion": "networking.k8s.io/v1",
            "metadata": {
              "name": "namespace-isolation"
            },
            "spec": {
              "podSelector": {},
              "ingress": [
                {
                  "from": [
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "self()"
                        }
                      }
                    },
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "ingress-nginx-internal"
                        }
                      }
                    },
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "ingress-nginx-external"
                        }
                      }
                    },
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "app.kubernetes.io/name": "monitoring"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
